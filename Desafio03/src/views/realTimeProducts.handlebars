<html>
<head>
  <title>Produtos em Tempo Real</title>
</head>
<body>
  <h1>Produtos em Tempo Real</h1>
  <ul id="product-list">
    {{#each products}}
      <li>{{this.name}} - R$ {{this.price}}</li>
    {{/each}}
  </ul>

  <h2>Adicionar Novo Produto</h2>
  <form id="product-form">
    <label for="name">Nome:</label>
    <input type="text" id="name" required>
    <label for="price">Pre√ßo:</label>
    <input type="number" id="price" required>
    <button type="submit">Adicionar Produto</button>
  </form>

  <h2>Excluir Produto</h2>
  <form id="delete-form">
    <label for="productId">ID do Produto:</label>
    <input type="number" id="productId" required>
    <button type="submit">Excluir Produto</button>
  </form>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();

    // Atualizar lista de produtos em tempo real
    socket.on('productList', (products) => {
      const productList = document.getElementById('product-list');
      productList.innerHTML = ''; // Limpar a lista atual
      products.forEach(product => {
        const li = document.createElement('li');
        li.textContent = `${product.name} - R$ ${product.price}`;
        productList.appendChild(li);
      });
    });

    // Adicionar novo produto via WebSocket
    const productForm = document.getElementById('product-form');
    productForm.addEventListener('submit', (event) => {
      event.preventDefault();
      const name = document.getElementById('name').value;
      const price = document.getElementById('price').value;
      socket.emit('newProduct', { name, price });
      productForm.reset();
    });

    // Excluir produto via WebSocket
    const deleteForm = document.getElementById('delete-form');
    deleteForm.addEventListener('submit', (event) => {
      event.preventDefault();
      const productId = document.getElementById('productId').value;
      socket.emit('deleteProduct', productId);
      deleteForm.reset();
    });
  </script>
</body>
</html>
